local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local window = Rayfield:CreateWindow({
    Name = "Slap Battles - Alpha Hax",
    LoadingTitle = "Loading Assets..",
    LoadingSubtitle = "Created By Zale",
    ConfigurationSaving = {
        Enabled = false,
        FileName = "Sirius"
    },
    KeySystem = true,
    KeySettings = {
        Title = "Zale's Key System",
        Subtitle = "Enter Your Key",
        Note = "Rate The Features",
        FileName = "Sirius",
        SaveKey = false,
        Key = "2025"
    }
})

local lobbyTab = window:CreateTab("Lobby")
local gameModesSection = lobbyTab:CreateSection("Game-Modes")

lobbyTab:CreateButton({
    Name = "Teleport To Killstreak Only Gamemode",
    SectionParent = gameModesSection,
    Callback = function()
        local TeleportService = game:GetService("TeleportService")
        local player = game:GetService("Players").LocalPlayer
        TeleportService:Teleport(11520107397, player)
    end
})

lobbyTab:CreateButton({
    Name = "Teleport To Slap Royale Gamemode",
    SectionParent = gameModesSection,
    Callback = function()
        local TeleportService = game:GetService("TeleportService")
        local player = game:GetService("Players").LocalPlayer
        TeleportService:Teleport(9426795465, player)
    end
})

lobbyTab:CreateButton({
    Name = "Teleport To No Oneshot Gloves Gamemode",
    SectionParent = gameModesSection,
    Callback = function()
        local TeleportService = game:GetService("TeleportService")
        local player = game:GetService("Players").LocalPlayer
        TeleportService:Teleport(9015014224, player)
    end
})

local barzilSection = lobbyTab:CreateSection("Barzil")

lobbyTab:CreateButton({
    Name = "Teleport To Barzil",
    SectionParent = barzilSection,
    Callback = function()
        local lobbyModel = workspace:FindFirstChild("Lobby")
        local brazilModel = lobbyModel:FindFirstChild("brazil")
        local portalPart = brazilModel:FindFirstChild("portal")
        local touchTransmitter = portalPart:FindFirstChildOfClass("TouchTransmitter")
        local character = game:GetService("Players").LocalPlayer.Character
        local rootPart = character:FindFirstChild("HumanoidRootPart")
        firetouchinterest(rootPart, portalPart, 0)
        wait()
        firetouchinterest(rootPart, portalPart, 1)
    end
})

local arenasTab = window:CreateTab("Arenas")
local normalArenaSection = arenasTab:CreateSection("Normal Arena")

arenasTab:CreateButton({
    Name = "Enter Normal Arena",
    SectionParent = normalArenaSection,
    Callback = function()
        local lobbyModel = workspace:FindFirstChild("Lobby")
        local teleportPart = lobbyModel:FindFirstChild("Teleport1")
        local touchTransmitter = teleportPart:FindFirstChildOfClass("TouchTransmitter")
        local character = game:GetService("Players").LocalPlayer.Character
        local rootPart = character:FindFirstChild("HumanoidRootPart")
        firetouchinterest(rootPart, teleportPart, 0)
        wait()
        firetouchinterest(rootPart, teleportPart, 1)
    end
})

arenasTab:CreateToggle({
    Name = "Auto-Enter Normal Arena",
    SectionParent = normalArenaSection,
    CurrentValue = false,
    Callback = function(state)
        _G.autoEnterArena = state
        if state then
            spawn(function()
                while _G.autoEnterArena do
                    local character = game:GetService("Players").LocalPlayer.Character
                    local isInArena = character:FindFirstChild("isInArena")
                    if isInArena and not isInArena.Value then
                        local lobbyModel = workspace:FindFirstChild("Lobby")
                        local teleportPart = lobbyModel and lobbyModel:FindFirstChild("Teleport1")
                        local rootPart = character:FindFirstChild("HumanoidRootPart")
                        if teleportPart and rootPart then
                            firetouchinterest(rootPart, teleportPart, 0)
                            firetouchinterest(rootPart, teleportPart, 1)
                        end
                    end
                    wait()
                end
            end)
        end
    end
})

local defaultArenaSection = arenasTab:CreateSection("Default Arena")

arenasTab:CreateButton({
    Name = "Enter Default Only Arena",
    SectionParent = defaultArenaSection,
    Callback = function()
        local lobbyModel = workspace:FindFirstChild("Lobby")
        local teleportPart = lobbyModel:FindFirstChild("Teleport2")
        local touchTransmitter = teleportPart:FindFirstChildOfClass("TouchTransmitter")
        local character = game:GetService("Players").LocalPlayer.Character
        local rootPart = character:FindFirstChild("HumanoidRootPart")
        firetouchinterest(rootPart, teleportPart, 0)
        firetouchinterest(rootPart, teleportPart, 1)
    end
})

arenasTab:CreateToggle({
    Name = "Auto-Enter Default Only Arena",
    SectionParent = defaultArenaSection,
    CurrentValue = false,
    Callback = function(state)
        _G.autoEnterDefaultArena = state
        if state then
            spawn(function()
                while _G.autoEnterDefaultArena do
                    local character = game:GetService("Players").LocalPlayer.Character
                    local isInDefaultArena = character:FindFirstChild("IsInDefaultArena")
                    if isInDefaultArena and not isInDefaultArena.Value then
                        local lobbyModel = workspace:FindFirstChild("Lobby")
                        local teleportPart = lobbyModel and lobbyModel:FindFirstChild("Teleport2")
                        local rootPart = character:FindFirstChild("HumanoidRootPart")
                        if teleportPart and rootPart then
                            firetouchinterest(rootPart, teleportPart, 0)
                            firetouchinterest(rootPart, teleportPart, 1)
                        end
                    end
                    wait()
                end
            end)
        end
    end
})

local hitmanTab = window:CreateTab("Hitman Quests")
local easterEggSection = hitmanTab:CreateSection("Easter Egg Hunter")

hitmanTab:CreateButton({
    Name = "Accept Easter Egg Hunter Quest",
    SectionParent = easterEggSection,
    Callback = function()
        local replicatedStorage = game:GetService("ReplicatedStorage")
        local networkFolder = replicatedStorage:FindFirstChild("_NETWORK")
        if networkFolder then
            for _, child in ipairs(networkFolder:GetChildren()) do
                if child:IsA("RemoteEvent") and string.find(child.Name, "{") then
                    child:FireServer("_questChainEasterHunter")
                end
            end
        end
    end
})

hitmanTab:CreateButton({
    Name = "Instant Grab All Easter Eggs",
    SectionParent = easterEggSection,
    Callback = function()
        local player = game:GetService("Players").LocalPlayer
        local character = player.Character
        local rootPart = character and character:FindFirstChild("HumanoidRootPart")
        local eggFolder = workspace:FindFirstChild("EasterHuntEggs")

        if eggFolder and rootPart then
            for _, part in ipairs(eggFolder:GetChildren()) do
                if part:IsA("MeshPart") then
                    local touchTransmitter = part:FindFirstChildOfClass("TouchTransmitter")
                    if touchTransmitter then
                        firetouchinterest(rootPart, part, 0)
                        firetouchinterest(rootPart, part, 1)
                    end
                end
            end
        end
    end
})

hitmanTab:CreateButton({
    Name = "Claim Quest (Use After You Have Grabbed All Easter Eggs)",
    SectionParent = easterEggSection,
    Callback = function()
        local replicatedStorage = game:GetService("ReplicatedStorage")
        local networkFolder = replicatedStorage:FindFirstChild("_NETWORK")
        if networkFolder then
            for _, child in ipairs(networkFolder:GetChildren()) do
                if child:IsA("RemoteEvent") and string.find(child.Name, "{") then
                    child:FireServer("_questChainEasterHunter")
                end
            end
        end
    end
})

local hunterQuestSection = hitmanTab:CreateSection("A Hunt For The Hunter")

hitmanTab:CreateButton({
    Name = 'Accept "A Hunt For The Hunter" Quest',
    SectionParent = hunterQuestSection,
    Callback = function()
        local replicatedStorage = game:GetService("ReplicatedStorage")
        local networkFolder = replicatedStorage:WaitForChild("_NETWORK")
        local questArg = "_questChainHitmansHandkerchief"

        for _, remote in ipairs(networkFolder:GetChildren()) do
            if remote:IsA("RemoteEvent") and string.find(remote.Name, "{") then
                remote:FireServer(questArg)
            end
        end
    end
})

hitmanTab:CreateButton({
    Name = "Auto Complete Quest",
    SectionParent = hunterQuestSection,
    Callback = function()
        local Players = game:GetService("Players")
        local Workspace = game:GetService("Workspace")
        local VirtualInput = game:GetService("VirtualInputManager")

        local player = Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local rootPart = character:WaitForChild("HumanoidRootPart")
        local isInArena = character:FindFirstChild("IsInArena")

        local arena = Workspace.Arena
        local cannonIsland = arena.CannonIsland
        local gloveModel = cannonIsland.GlovelHoleInTheWall
        local glovePart = gloveModel.GlovelHoleInTheWall
        local glovePrompt = gloveModel:FindFirstChildOfClass("ProximityPrompt")

        local lobby = Workspace.Lobby
        local teleportPart = lobby.Teleport1

        if not isInArena or not isInArena.Value then
            firetouchinterest(rootPart, teleportPart, 0)
            firetouchinterest(rootPart, teleportPart, 1)
            task.wait(1)
        end

        rootPart.CFrame = glovePart.CFrame + glovePart.CFrame.LookVector * -3
        task.wait(1)

        if glovePrompt then
            glovePrompt.MaxActivationDistance = math.huge
            glovePrompt:InputHoldBegin()
            glovePrompt:InputHoldEnd()
        end

        task.wait(5)

        local treasureSpot = cannonIsland.TreasureSpots._treasureSpot11
        rootPart.CFrame = treasureSpot.CFrame

        spawn(function()
            VirtualInput:SendKeyEvent(true, Enum.KeyCode.E, false, game)
            task.wait(5)

            while true do
                local chestModel = Workspace.TreasureChestFolder.TreasureChest:FindFirstChild("TreasureChest")
                if chestModel then
                    local chestPart = chestModel:FindFirstChild("TreasureChest")
                    if chestPart then
                        local chestPrompt = chestPart:FindFirstChildOfClass("ProximityPrompt")
                        if chestPrompt then
                            chestPrompt.MaxActivationDistance = math.huge
                            chestPrompt:InputHoldBegin()
                            chestPrompt:InputHoldEnd()
                        end
                    end
                    break
                else
                    VirtualInput:SendKeyEvent(true, Enum.KeyCode.E, false, game)
                    task.wait(5)
                end
            end
        end)
    end
})
