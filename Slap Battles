local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local window = Rayfield:CreateWindow({
    Name = "Slap Battles - Alpha Hax",
    LoadingTitle = "Loading Assets..",
    LoadingSubtitle = "Created By Zale",
    ConfigurationSaving = {
        Enabled = false,
        FileName = "Sirius"
    },
    KeySystem = true,
    KeySettings = {
        Title = "Zale's Key System",
        Subtitle = "Enter Your Key",
        Note = "Rate The Features",
        FileName = "Sirius",
        SaveKey = false,
        Key = "2025"
    }
})

local lobbyTab = window:CreateTab("Lobby")
local gameModesSection = lobbyTab:CreateSection("Game-Modes")

lobbyTab:CreateButton({
    Name = "Teleport To Killstreak Only Gamemode",
    SectionParent = gameModesSection,
    Callback = function()
        local TeleportService = game:GetService("TeleportService")
        local player = game:GetService("Players").LocalPlayer
        TeleportService:Teleport(11520107397, player)
    end
})

lobbyTab:CreateButton({
    Name = "Teleport To Slap Royale Gamemode",
    SectionParent = gameModesSection,
    Callback = function()
        local TeleportService = game:GetService("TeleportService")
        local player = game:GetService("Players").LocalPlayer
        TeleportService:Teleport(9426795465, player)
    end
})

lobbyTab:CreateButton({
    Name = "Teleport To No Oneshot Gloves Gamemode",
    SectionParent = gameModesSection,
    Callback = function()
        local TeleportService = game:GetService("TeleportService")
        local player = game:GetService("Players").LocalPlayer
        TeleportService:Teleport(9015014224, player)
    end
})

local barzilSection = lobbyTab:CreateSection("Barzil")

lobbyTab:CreateButton({
    Name = "Teleport To Barzil",
    SectionParent = barzilSection,
    Callback = function()
        local lobbyModel = workspace:FindFirstChild("Lobby")
        local brazilModel = lobbyModel:FindFirstChild("brazil")
        local portalPart = brazilModel:FindFirstChild("portal")
        local touchTransmitter = portalPart:FindFirstChildOfClass("TouchTransmitter")
        local character = game:GetService("Players").LocalPlayer.Character
        local rootPart = character:FindFirstChild("HumanoidRootPart")
        firetouchinterest(rootPart, portalPart, 0)
        wait()
        firetouchinterest(rootPart, portalPart, 1)
    end
})

local arenasTab = window:CreateTab("Arenas")
local normalArenaSection = arenasTab:CreateSection("Normal Arena")

arenasTab:CreateButton({
    Name = "Enter Normal Arena",
    SectionParent = normalArenaSection,
    Callback = function()
        local lobbyModel = workspace:FindFirstChild("Lobby")
        local teleportPart = lobbyModel:FindFirstChild("Teleport1")
        local touchTransmitter = teleportPart:FindFirstChildOfClass("TouchTransmitter")
        local character = game:GetService("Players").LocalPlayer.Character
        local rootPart = character:FindFirstChild("HumanoidRootPart")
        firetouchinterest(rootPart, teleportPart, 0)
        wait()
        firetouchinterest(rootPart, teleportPart, 1)
    end
})

arenasTab:CreateToggle({
    Name = "Auto-Enter Arena",
    SectionParent = normalArenaSection,
    CurrentValue = false,
    Callback = function(state)
        _G.autoEnterArena = state
        if state then
            spawn(function()
                while _G.autoEnterArena do
                    local character = game:GetService("Players").LocalPlayer.Character
                    local isInArena = character:FindFirstChild("isInArena")
                    if isInArena and not isInArena.Value then
                        local lobbyModel = workspace:FindFirstChild("Lobby")
                        local teleportPart = lobbyModel and lobbyModel:FindFirstChild("Teleport1")
                        local rootPart = character:FindFirstChild("HumanoidRootPart")
                        if teleportPart and rootPart then
                            firetouchinterest(rootPart, teleportPart, 0)
                            firetouchinterest(rootPart, teleportPart, 1)
                        end
                    end
                    wait()
                end
            end)
        end
    end
})

local defaultArenaSection = arenasTab:CreateSection("Default Arena")

arenasTab:CreateButton({
    Name = "Enter Default Only Arena",
    SectionParent = defaultArenaSection,
    Callback = function()
        local lobbyModel = workspace:FindFirstChild("Lobby")
        local teleportPart = lobbyModel:FindFirstChild("Teleport2")
        local touchTransmitter = teleportPart:FindFirstChildOfClass("TouchTransmitter")
        local character = game:GetService("Players").LocalPlayer.Character
        local rootPart = character:FindFirstChild("HumanoidRootPart")
        firetouchinterest(rootPart, teleportPart, 0)
        firetouchinterest(rootPart, teleportPart, 1)
    end
})

local autoEnterActive = false

arenasTab:CreateToggle({
    Name = "Auto-Enter Default Only Arena",
    SectionParent = defaultArenaSection,
    Default = false,
    Callback = function(state)
        autoEnterActive = state

        if state then
            while autoEnterActive and wait() do
                local player = game:GetService("Players").LocalPlayer
                local character = player.Character
                if character then
                    local isInDefaultArena = character:FindFirstChild("IsInDefaultArena")
                    if isInDefaultArena and not isInDefaultArena.Value then
                        local lobbyModel = workspace:FindFirstChild("Lobby")
                        local teleportPart = lobbyModel and lobbyModel:FindFirstChild("Teleport2")
                        local touchTransmitter = teleportPart and teleportPart:FindFirstChildOfClass("TouchTransmitter")
                        local rootPart = character:FindFirstChild("HumanoidRootPart")
                        if rootPart and teleportPart and touchTransmitter then
                            firetouchinterest(rootPart, teleportPart, 0)
                            firetouchinterest(rootPart, teleportPart, 1)
                        end
                    end
                end
            end
        end
    end
})
